X-Makina Assembler - Version XM-23 Single Pass+ Assembler - Release 14.05.23a
Input file name: XM23_TLC.txt
Time of assembly: Sun 26 Nov 2023 20:05:14 
  1	    	     	; Device 0 is the timer
  2	    	     	; Device 3 is where the outputs to the TLC will be
  3	    	     	; Device 4 is where the input from the TLC will be
  4	    	     	
  5	    	     	; R4 will be the timer counter that counts 0.5s intervals
  6	    	     	
  7	    	     	; R2 will be the device R/W register
  8	    	     	; R1 will be the address of the TLC device output vector
  9	    	     	; R0 will be the address of the Timer vector
 10	    	     	
 17	    	     	
 18	    	     	org #0000	; Timer Device
 19	0000	0212	word #0212	; Have timer trigger at 0.5s intervals
 20	    	     	
 21	    	     	org #0006	; TLC GPIO outputs
 22	0006	0010	word #0010	; DR[3:0] = [PEDEST, GRN, YEL, RED]
 23	    	     	
 24	    	     	org #0008	; TLC GPIO input
 25	0008	0012	word #0012	; DR[0] is the push button input
 26	    	     	
 27	    	     	org #1000
 28	    	     	Start
 29	1000	4C3D	mov R7,R5		; LR = PC
 30	1002	6800	movlz TIMER_CSR,R0	; R0 = $0
 31	1004	6831	movlz TLCo_CSR,R1	; R1 = $6
 32	    	     	
 33	1006	4784	and $0,R4		; Clear counter (R4)
 34	1008	7801	movh #0000,R1
 35	100A	6041	movl TLCi_CSR,R1	; R1 = 0x0008
 36	100C	584A	ld.b R1,R2		; R2 = memory[0x0008]
 37	100E	49D2	bit.b $2,R2		; Check the input bit 2 to see if the push button has been pressed
 38	1010	201E	beq NOT_PRESSED
 39	    	     				; Executes if button pressed
 40	1012	4782	and $0,R2		; Clear R2
 41	1014	7981	movh #3000,R1
 42	1016	6011	movl #02,R1		; R1 = 0x3002
 43	1018	5C51	st.b R2,R1		; memory[0x3002] = 0 (Clear the memory location)
 44	101A	6822	movlz $4,R2		; R2 = 0x0004 (GREEN ON)
 45	101C	40A2	add $8,R2		; R2 = 0x000C (GREEN and PEDESTRIAN ON)
 46	101E	6831	movlz TLCo_CSR,R1	; R1 = $6
 47	1020	C0D1	str.b R2,R1,$1		; memory[TLCo_CSR + 1] = R2 = 0x000C
 48	1022	6823	movlz $4,R3		; R3 = $4
 49	    	     	
 50	    	     	PRE_GP_LP
 51	1024	4784	and $0,R4		; Clear counter (R4)
 52	1026	6800	movlz TIMER_CSR,R0	; R0 = $0
 53	    	     	
 54	    	     	GRN_AND_PEDEST_LP
 55	1028	5842	ld.b R0,R2		; R2 = memory[TIMER_CSR]
 56	102A	4992	bit $2,R2		; Check if DBA is set
 57	102C	23FD	beq GRN_AND_PEDEST_LP	; Recheck until the DBA is set
 58	102E	408C	add $1,R4		; 0.5s has passed
 59	1030	451C	cmp R3,R4		; Check if R3 intervals has passed
 60	1032	27FA	bne GRN_AND_PEDEST_LP	; Repeat check until R3 half second intervals passed
 61	    	     	
 62	1034	80CA	ldr.b R1,$1,R2		; R2 = memory[TLCo_CSR + 1]
 63	1036	46A2	xor $8,R2		; GREEN ON, PEDESTRIAN TOGGLED
 64	1038	C0D1	str.b R2,R1,$1		; memory[TLCo_CSR + 1] = R2
 65	103A	680B	movlz $1,R3		; R3 = 1
 66	103C	7980	movh #3000,R0		; Temporarily use R0 as an address
 67	103E	6010	movl #02,R0		; R0 = 0x3002
 68	1040	5844	ld.b R0,R4		; Temporarily use R4 as a counter
 69	1042	408C	add $1,R4		
 70	1044	5C20	st R4,R0		; memory[0x3002] = R4
 71	1046	6828	movlz $5,R0		; R0 = 5
 72	1048	4504	cmp R0,R4		; Repeat 5 times (2s duration of flashing)
 73	104A	27EC	bne PRE_GP_LP
 74	104C	3C0C	bra YELLOW_STAGE
 75	    	     	
 76	    	     	NOT_PRESSED
 77	104E	4784	and $0,R4		; Clear counter (R4)
 78	1050	6822	movlz $4,R2		; R2 = 0x0004 (GREEN ON)
 79	1052	6831	movlz TLCo_CSR,R1	; R1 = $6
 80	1054	6800	movlz TIMER_CSR,R0	; R0 = $0
 81	1056	C0D1	str.b R2,R1,$1		; memory[TLCo_CSR + 1] = R2 = 0x0004
 82	1058	6843	movlz $8,R3		; R3 = $8
 83	    	     	
 84	    	     	GREEN_ON
 85	105A	5842	ld.b R0,R2		; R2 = memory[TIMER_CSR]
 86	105C	4992	bit $2,R2		; Check if DBA is set
 87	105E	23FD	beq GREEN_ON		; Recheck until the DBA is set
 88	1060	408C	add $1,R4		; 0.5s has passed
 89	1062	451C	cmp R3,R4		; Check if 4s has passed (8 intervals)
 90	1064	27FA	bne GREEN_ON		; Repeat check until 4s has passed
 91	    	     	
 92	    	     	YELLOW_STAGE
 93	    	     	
 94	1066	4784	and $0,R4		; Clear counter (R4)
 95	1068	6800	movlz TIMER_CSR,R0	; R0 = $0
 96	106A	6812	movlz $2,R2		; R2 = 0x0002 (YELLOW ON)
 97	106C	C0D1	str.b R2,R1,$1		; memory[TLCo_CSR + 1] = R2 = 0x0002
 98	106E	6833	movlz $6,R3		; R3 = $6
 99	    	     	
100	    	     	YELLOW_ON
101	1070	5842	ld.b R0,R2		; R2 = memory[TIMER_CSR]
102	1072	4992	bit $2,R2		; Check if DBA is set
103	1074	23FD	beq YELLOW_ON		; Recheck until the DBA is set
104	1076	408C	add $1,R4		; 0.5s has passed
105	1078	451C	cmp R3,R4		; Check if 3s has passed (6 intervals)
106	107A	27FA	bne YELLOW_ON		; Repeat check until 3s has passed
107	    	     	
108	107C	680A	movlz $1,R2		; R2 = 0x0001 (RED ON)
109	107E	C0D1	str.b R2,R1,$1		; memory[TLCo_CSR + 1] = R2 = 0x0001
110	1080	6863	movlz $12,R3		; R3 = $12
111	    	     	
112	    	     	RED_ON
113	1082	5842	ld.b R0,R2		; R2 = memory[TIMER_CSR]
114	1084	4992	bit $2,R2		; Check if DBA is set
115	1086	23FD	beq RED_ON		; Recheck until the DBA is set
116	1088	408C	add $1,R4		; 0.5s has passed
117	108A	451C	cmp R3,R4		; Check if 6s has passed (12 intervals)
118	108C	27FA	bne RED_ON		; Repeat check until 6s has passed
119	108E	4C2F	mov R5,R7		; Return to start of program

Successful completion of assembly - 2P

** Symbol table **
Name                               	Type	Value	Decimal
RED_ON                             	REL	1082	4226	PRI
YELLOW_ON                          	REL	1070	4208	PRI
GREEN_ON                           	REL	105A	4186	PRI
YELLOW_STAGE                       	REL	1066	4198	PRI
GRN_AND_PEDEST_LP                  	REL	1028	4136	PRI
PRE_GP_LP                          	REL	1024	4132	PRI
NOT_PRESSED                        	REL	104E	4174	PRI
Start                              	REL	1000	4096	PRI
TLCi_DR                            	CON	0009	9	PRI
TLCi_CSR                           	CON	0008	8	PRI
TLCo_DR                            	CON	0007	7	PRI
TLCo_CSR                           	CON	0006	6	PRI
TIMER_DR                           	CON	0001	1	PRI
TIMER_CSR                          	CON	0000	0	PRI
R7                                 	REG	0007	7	PRI
R6                                 	REG	0006	6	PRI
R5                                 	REG	0005	5	PRI
R4                                 	REG	0004	4	PRI
R3                                 	REG	0003	3	PRI
R2                                 	REG	0002	2	PRI
R1                                 	REG	0001	1	PRI
R0                                 	REG	0000	0	PRI

.XME file: C:\Users\mccoy\Documents\ECED3900\SRec_to_Mem\Debug\XM23_TLC.xme

